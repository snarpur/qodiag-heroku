= form_for @person do |f|
  -@opposite_parent = @patient.opposite_parent(@person)
  -@main_builder = f
  - if @person.errors.any?
    #error_explanation
      %h2
        = pluralize(@person.errors.count, "error")
        prohibited this relationship from being saved:
        %ul
        - @person.errors.full_messages.each do |msg|
          %li= msg
  = render 'shared/wizard_form_buttons', :locals => {:form_builder => f}
  %input{:type => "hidden", :name => "next_step", :value  => @wizard.next_step_no}
  -parenthood = get_relationship(@person,@patient,'parent')
  =f.fields_for :relationships, parenthood do |parent_relationship|
    = render "relationships/relationship_status", :locals => {:form_builder => parent_relationship, :status => true}
    =f.hidden_field :sex, :value  => set_parent_gender(@wizard.current_step)
    =f.hidden_field :ispatient, :value  => 0


  - content_for :jstemplates do
    -spouse_partial = {:partial => "relationships/spouse_relationship"}
    != "var spouse_relationship ='#{generate_template(f, :relationships, spouse_partial, {:name => 'spouse'})}'"

  .frm-section.nested-context
    %h4= t('terms.guardianship')
    -guardianship = get_relationship(@person,@patient,'guardian')
    =f.fields_for :relationships, guardianship  do |guardian_relationship|
      = render "relationships/guardian_relationship", :locals => {:form_builder => guardian_relationship }

  

 
  -if @opposite_parent
    -parents_relationship = get_relationship_inverse_relationship(@person,@opposite_parent,'spouse')
    =f.fields_for parent_relationship_direction(@patient, @person), parents_relationship do |relationship_form|
      = render "relationships/parents_relationship", :locals => {:form_builder => relationship_form}


  = render "people/parents/person_information", :locals => {:form_builder => f}
  

  .frm-section.nested-context
    %h4= t('terms.spouses')
    .field.inp-aux
      = link_to t('actions.add_spouse'), '#spouse_relationship', :class => "action_element {name : 'add_spouse_relationship'} icon partner"

    %hr.break
    -spouses = get_spouses_exclude_patient_parent(@person,@patient)
    -unless spouses.empty?
      =f.fields_for :relationships, spouses do |spouse_form|
        = render "people/parents/spouse_relationship", :collection => spouses, :locals => {:form_builder => spouse_form} 
    .spouse

  = render 'shared/wizard_form_buttons', :locals => {:form_builder => f}
      
