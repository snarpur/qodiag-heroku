Backbone.ChildViewContainer=function(f,b){var e=function(a){this._views={};this._indexByModel={};this._indexByCustom={};this._updateLength();b.each(a,this.add,this)};b.extend(e.prototype,{add:function(a,b){var c=a.cid;this._views[c]=a;a.model&&(this._indexByModel[a.model.cid]=c);b&&(this._indexByCustom[b]=c);this._updateLength()},findByModel:function(a){return this.findByModelCid(a.cid)},findByModelCid:function(a){return this.findByCid(this._indexByModel[a])},findByCustom:function(a){return this.findByCid(this._indexByCustom[a])},
findByIndex:function(a){return b.values(this._views)[a]},findByCid:function(a){return this._views[a]},remove:function(a){var d=a.cid;a.model&&delete this._indexByModel[a.model.cid];b.any(this._indexByCustom,function(a,b){if(a===d)return delete this._indexByCustom[b],!0},this);delete this._views[d];this._updateLength()},call:function(a){this.apply(a,b.tail(arguments))},apply:function(a,d){b.each(this._views,function(c){b.isFunction(c[a])&&c[a].apply(c,d||[])})},_updateLength:function(){this.length=
b.size(this._views)}});b.each("forEach each map find detect filter select reject every all some any include contains invoke toArray first initial rest last without isEmpty pluck".split(" "),function(a){e.prototype[a]=function(){var d=[b.values(this._views)].concat(b.toArray(arguments));return b[a].apply(b,d)}});return e}(Backbone,_);
