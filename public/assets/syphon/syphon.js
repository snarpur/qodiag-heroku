Backbone.Syphon=(function(Backbone,$,_){var Syphon={};Syphon.ignoredTypes=["button","submit","reset","fieldset"];Syphon.serialize=function(view,options){var data={};var config=buildConfig(options);var elements=getInputElements(view,config);_.each(elements,function(el){var $el=$(el);var type=getElementType($el);var keyExtractor=config.keyExtractors.get(type);var key=keyExtractor($el);var inputReader=config.inputReaders.get(type);var value=inputReader($el);var validKeyAssignment=config.keyAssignmentValidators.get(type);if(validKeyAssignment($el,key,value)){var keychain=config.keySplitter(key);data=assignKeyValue(data,keychain,value)}});return data};Syphon.deserialize=function(view,data,options){var config=buildConfig(options);var elements=getInputElements(view,config);var flattenedData=flattenData(config,data);_.each(elements,function(el){var $el=$(el);var type=getElementType($el);var keyExtractor=config.keyExtractors.get(type);var key=keyExtractor($el);var inputWriter=config.inputWriters.get(type);var value=flattenedData[key];inputWriter($el,value)})};var getInputElements=function(view,config){var form=getForm(view);var elements=form.elements;elements=_.reject(elements,function(el){var reject;var type=getElementType(el);var extractor=config.keyExtractors.get(type);var identifier=extractor($(el));var foundInIgnored=_.include(config.ignoredTypes,type);var foundInInclude=_.include(config.include,identifier);var foundInExclude=_.include(config.exclude,identifier);if(foundInInclude){reject=false}else{if(config.include){reject=true}else{reject=(foundInExclude||foundInIgnored)}}return reject});return elements};var getElementType=function(el){var typeAttr;var $el=$(el);var tagName=$el[0].tagName;var type=tagName;if(tagName.toLowerCase()==="input"){typeAttr=$el.attr("type");if(typeAttr){type=typeAttr}else{type="text"}}return type.toLowerCase()};var getForm=function(viewOrForm){if(_.isUndefined(viewOrForm.$el)&&viewOrForm.tagName.toLowerCase()==="form"){return viewOrForm}else{return viewOrForm.$el.is("form")?viewOrForm.el:viewOrForm.$("form")[0]}};var buildConfig=function(options){var config=_.clone(options)||{};config.ignoredTypes=_.clone(Syphon.ignoredTypes);config.inputReaders=config.inputReaders||Syphon.InputReaders;config.inputWriters=config.inputWriters||Syphon.InputWriters;config.keyExtractors=config.keyExtractors||Syphon.KeyExtractors;config.keySplitter=config.keySplitter||Syphon.KeySplitter;config.keyJoiner=config.keyJoiner||Syphon.KeyJoiner;config.keyAssignmentValidators=config.keyAssignmentValidators||Syphon.KeyAssignmentValidators;return config};var assignKeyValue=function(obj,keychain,value){if(!keychain){return obj}var key=keychain.shift();if(!obj[key]){obj[key]=_.isArray(key)?[]:{}}if(keychain.length===0){if(_.isArray(obj[key])){obj[key].push(value)}else{obj[key]=value}}if(keychain.length>0){assignKeyValue(obj[key],keychain,value)}return obj};var flattenData=function(config,data,parentKey){var flatData={};_.each(data,function(value,keyName){var hash={};if(parentKey){keyName=config.keyJoiner(parentKey,keyName)}if(_.isArray(value)){keyName+="[]";hash[keyName]=value}else{if(_.isObject(value)){hash=flattenData(config,value,keyName)}else{hash[keyName]=value}}_.extend(flatData,hash)});return flatData};return Syphon})(Backbone,jQuery,_);Backbone.Syphon.TypeRegistry=function(){this.registeredTypes={}};Backbone.Syphon.TypeRegistry.extend=Backbone.Model.extend;_.extend(Backbone.Syphon.TypeRegistry.prototype,{get:function(type){var item=this.registeredTypes[type];if(!item){item=this.registeredTypes["default"]}return item},register:function(type,item){this.registeredTypes[type]=item},registerDefault:function(item){this.registeredTypes["default"]=item},unregister:function(type){if(this.registeredTypes[type]){delete this.registeredTypes[type]}}});Backbone.Syphon.KeyExtractorSet=Backbone.Syphon.TypeRegistry.extend();Backbone.Syphon.KeyExtractors=new Backbone.Syphon.KeyExtractorSet();Backbone.Syphon.KeyExtractors.registerDefault(function($el){return $el.prop("name")});Backbone.Syphon.InputReaderSet=Backbone.Syphon.TypeRegistry.extend();Backbone.Syphon.InputReaders=new Backbone.Syphon.InputReaderSet();Backbone.Syphon.InputReaders.registerDefault(function($el){return $el.val()});Backbone.Syphon.InputReaders.register("checkbox",function($el){var checked=$el.prop("checked");return checked});Backbone.Syphon.InputWriterSet=Backbone.Syphon.TypeRegistry.extend();Backbone.Syphon.InputWriters=new Backbone.Syphon.InputWriterSet();Backbone.Syphon.InputWriters.registerDefault(function($el,value){$el.val(value)});Backbone.Syphon.InputWriters.register("checkbox",function($el,value){$el.prop("checked",value)});Backbone.Syphon.InputWriters.register("radio",function($el,value){$el.prop("checked",$el.val()===value)});Backbone.Syphon.KeyAssignmentValidatorSet=Backbone.Syphon.TypeRegistry.extend();Backbone.Syphon.KeyAssignmentValidators=new Backbone.Syphon.KeyAssignmentValidatorSet();Backbone.Syphon.KeyAssignmentValidators.registerDefault(function(){return true});Backbone.Syphon.KeyAssignmentValidators.register("radio",function($el,key,value){return $el.prop("checked")});Backbone.Syphon.KeySplitter=function(key){var matches=key.match(/[^\[\]]+/g);if(key.indexOf("[]")===key.length-2){lastKey=matches.pop();matches.push([lastKey])}return matches};Backbone.Syphon.KeyJoiner=function(parentKey,childKey){return parentKey+"["+childKey+"]"};