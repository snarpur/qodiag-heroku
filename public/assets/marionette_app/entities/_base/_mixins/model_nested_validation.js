(function(){var h=[].slice;this.Qapp.module("ModelMixins",function(k,m,l,n,p,b){return k.NestedValidation={_relationKeys:function(){var a,d;d=b.pluck(this.relations,"key");a=b.keys(this.attributes);return b.intersection(d,a)},_validatedRelations:function(){return null!=this._validationRegister?this._validationRegister:this._validationRegister=[]},_addToValidatedRelations:function(b){return this._validatedRelations().push(b)},_isValidWithNested:function(){return!(null!=this.get("_errors")||null!=this.get("_nestedErrors"))},
_errorsWithNested:function(){var a,d;a=null!=this.get("_errors")?b.clone(this.get("_errors")):{};d=null!=this.get("_nestedErrors")?b.clone(this.get("_nestedErrors")):{};return b.extend(a,d)},_setNestedErrors:function(a,d,c){var f,g;c=null!=(g=this.get("_nestedErrors"))?g:{};f={};a instanceof l.Collection?b.each(a.models,function(c){return function(c){if(!c._isValidWithNested())return b.extend(f[d],c._errorsWithNested())}}(this)):a._isValidWithNested()||(f[d]=a._errorsWithNested());if(!b.isEmpty(f[d]))return c=
b.extend(c,f),this.set("_nestedErrors",c)},validateNested:function(){var a;this.set("_nestedErrors",null,{silent:!0});a=this._relationKeys();return b.isEmpty(a)?this.isValid(!0):b.each(a,function(d){return function(c){var a,g;a=d.get(c);g="Many"===b.findWhere(d.relations,{key:c}).type?"validated:"+c+":collection":"validated:"+c+".invalid validated:"+c+".valid";a.parentRelationsKey=c;d.once(g,function(a,e,f){d._setNestedErrors(a,c,g);d._addToValidatedRelations(c);if(b.isEmpty(b.difference(d._relationKeys(),
d._validatedRelations())))return d.isValid(!0)});return a.validateNested()}}(this))},setNestedServerErrors:function(a){var d,c;c={};d={};a=b.omit.apply(b,[a].concat(h.call(this._relationKeys())));b.each(a,function(a){return function(a,b){var e,f;e=b.split(".");if(1===e.length)return d[b]=a;if(null==c[f=e[0]])c[f]={};2===e.length&&(c[e[0]][e[1]]=a);if(3<=e.length)return c[e[0]][e.slice(1).join(".")]=a}}(this));b.isEmpty(d)||this.set("_errors",d);b.isEmpty(c)||this.set("_nestedErrors",c);return b.each(c,
function(a){return function(b,d){return a.get(d).setNestedServerErrors(c[d])}}(this))}}})}).call(this);
