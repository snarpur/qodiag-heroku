(function(){var __hasProp={}.hasOwnProperty,__extends=function(child,parent){for(var key in parent){if(__hasProp.call(parent,key)){child[key]=parent[key]}}function ctor(){this.constructor=child}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child};this.Qapp.module("SettingsApp.List",function(List,App,Backbone,Marionette,$,_){var _ref;return List.Controller=(function(_super){__extends(Controller,_super);function Controller(){_ref=Controller.__super__.constructor.apply(this,arguments);return _ref}Controller.prototype.listSettings=function(options){var settings,subView;subView=options.subView,this.region=options.region;settings=App.request("get:settings",options);this.showHeader(settings.getCurrentSetting());if(options.subView){return this.showBackNavigationView(settings.getCurrentSetting())}else{return this.showNavigation(settings)}};Controller.prototype.showNavigation=function(settings){var navigationView;navigationView=this.getNavigationView(settings);return this.show(navigationView,{region:this.region,loading:false})};Controller.prototype.showBackNavigationView=function(model){var view,_this=this;view=new List.Breadcrumb({model:model});this.region.show(view);return this.listenTo(view,"back",function(){})};Controller.prototype.showHeader=function(model){var headerRegion;headerRegion=App.request("content:header:region");return headerRegion.show(new List.Header({model:model}))};Controller.prototype.getNavigationView=function(settings){return new List.Navigation({collection:settings,itemViewOptions:{currentRoute:this.currentRoute}})};Controller.prototype.getLayoutView=function(){return new List.Layout};return Controller})(App.Controllers.Base)})}).call(this);