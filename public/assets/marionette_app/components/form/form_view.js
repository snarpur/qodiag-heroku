(function(){var __hasProp={}.hasOwnProperty,__extends=function(child,parent){for(var key in parent){if(__hasProp.call(parent,key)){child[key]=parent[key]}}function ctor(){this.constructor=child}ctor.prototype=parent.prototype;child.prototype=new ctor();child.__super__=parent.prototype;return child};this.Qapp.module("Components.Form",function(Form,App,Backbone,Marionette,$,_){var _ref;return Form.FormWrapper=(function(_super){__extends(FormWrapper,_super);function FormWrapper(){_ref=FormWrapper.__super__.constructor.apply(this,arguments);return _ref}FormWrapper.prototype.getTemplate=function(){if(this.options.config.modal){return"form/modal-form"}else{return"form/form"}};FormWrapper.prototype.tagName="form";FormWrapper.prototype.className=function(){return this.options.config.formClass};FormWrapper.prototype.attributes=function(){return{"data-type":this.getFormDataType()}};FormWrapper.prototype.regions={formContentRegion:"#form-content-region"};FormWrapper.prototype.ui={buttonContainer:"ul.inline-list"};FormWrapper.prototype.events={"click button[data-form-button]":"formButtonClick","click button[data-dismiss]":"closeButtonClick",keyup:"keypressed"};FormWrapper.prototype.formButtonClick=function(event){var buttonType;buttonType=$(event.target).attr("data-form-button");return this.trigger("form:"+buttonType,{sourceButton:buttonType})};FormWrapper.prototype.keypressed=function(e){if(e.which===13&&e.target.type!=="textarea"){return this.trigger("form:submit")}};FormWrapper.prototype.closeButtonClick=function(){return this.trigger("form:cancel")};FormWrapper.prototype.modelEvents={"change:_errors":"changeErrors","sync:start":"syncStart","sync:stop":"syncStop"};FormWrapper.prototype.initialize=function(options){this.addOpacityWrapper(false);return this.setInstancePropertiesFor("config","buttons")};FormWrapper.prototype.setFormContentRegion=function(region){return this.region.formContentRegion=region};FormWrapper.prototype.serializeData=function(){var _ref1,_ref2;return{footer:this.config.footer,modal:this.config.modal,title:this.config.title||false,buttons:(_ref1=(_ref2=this.buttons)!=null?_ref2.toJSON():void 0)!=null?_ref1:false}};FormWrapper.prototype.onShow=function(){var _this=this;return _.defer(function(){if(_this.config.focusFirstInput){_this.focusFirstInput()}if(_this.buttons){return _this.buttonPlacement()}})};FormWrapper.prototype.buttonPlacement=function(){return this.ui.buttonContainer.addClass(this.buttons.placement)};FormWrapper.prototype.focusFirstInput=function(){return this.$el.find("input[type=text],textarea,select").filter(":visible:first").focus()};FormWrapper.prototype.getFormDataType=function(){if(this.model.isNew()){return"new"}else{return"edit"}};FormWrapper.prototype.changeErrors=function(model,errors,options){if(this.config.errors){this.removeErrors();return this.addErrors(errors)}};FormWrapper.prototype.removeErrors=function(){this.$el.find(".error").removeClass("error");return this.$el.find(".help-inline").text("")};FormWrapper.prototype.addErrors=function(errors){var array,name,_results;if(errors==null){errors={}}_results=[];for(name in errors){array=errors[name];_results.push(this.addError(name,array))}return _results};FormWrapper.prototype.addError=function(name,error){var el;el=this.$el.find("[id='"+name+"_error']");el.closest(".control-group").addClass("error");return el.text(error)};FormWrapper.prototype.syncStart=function(model){if(this.config.syncing){return this.addOpacityWrapper()}};FormWrapper.prototype.syncStop=function(model){if(this.config.syncing){return this.addOpacityWrapper(false)}};return FormWrapper})(App.Views.Layout)})}).call(this);